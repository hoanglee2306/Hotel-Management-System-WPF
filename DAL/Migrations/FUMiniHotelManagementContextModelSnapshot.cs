// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(FUMiniHotelManagementContext))]
    partial class FUMiniHotelManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingDetailId"));

                    b.Property<decimal>("ActualPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("BookingReservationId")
                        .HasColumnType("int")
                        .HasColumnName("BookingReservationID");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("BookingDetailId")
                        .HasName("PK__BookingD__8136D47A6AFB413D");

                    b.HasIndex("BookingReservationId");

                    b.HasIndex("RoomId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("DAL.Models.BookingReservation", b =>
                {
                    b.Property<int>("BookingReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingReservationId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CheckinDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CheckoutDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("BookingReservationId")
                        .HasName("PK__BookingR__A2B23EBF3DF14C85");

                    b.HasIndex("CustomerId");

                    b.ToTable("BookingReservations");
                });

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly?>("CustomerBirthday")
                        .HasColumnType("date");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerStatus")
                        .HasColumnType("int");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8CF723078");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DAL.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("RoomDescription")
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("RoomMaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RoomPricePerDate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__32863919C99E730E");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DAL.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TypeNote")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("RoomTypeId")
                        .HasName("PK__RoomType__BCC896116AE3FF8A");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("DAL.Models.BookingDetail", b =>
                {
                    b.HasOne("DAL.Models.BookingReservation", "BookingReservation")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingReservationId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetails_BookingReservations");

                    b.HasOne("DAL.Models.Room", "Room")
                        .WithMany("BookingDetails")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetails_Rooms");

                    b.Navigation("BookingReservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DAL.Models.BookingReservation", b =>
                {
                    b.HasOne("DAL.Models.Customer", "Customer")
                        .WithMany("BookingReservations")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_BookingReservations_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.Room", b =>
                {
                    b.HasOne("DAL.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Rooms_RoomTypes");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("DAL.Models.BookingReservation", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("DAL.Models.Customer", b =>
                {
                    b.Navigation("BookingReservations");
                });

            modelBuilder.Entity("DAL.Models.Room", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("DAL.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
